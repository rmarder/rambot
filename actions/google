#!/usr/bin/php
<?php
# argv[1] = usernick, argv[2] = channel, argv[3] = action_args

error_reporting(0);

if(!class_exists('DOMDocument'))
{
	die('DOM / XML is not installed!');
}
if(!function_exists('curl_init'))
{
	die('CURL is not installed!');
}

function url_get_title($query)
{
	$query = urlencode($query);
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, 'https://lite.duckduckgo.com/lite/?q='.$query);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch, CURLOPT_FOLLOWLOCATION, true);
	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);
	curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 5);
	curl_setopt($ch, CURLOPT_TIMEOUT, 5);
	curl_setopt($ch,CURLOPT_USERAGENT, 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:92.0) Gecko/20100101 Firefox/92.0');
	$html = curl_exec($ch);
	curl_close($ch);

	if(strlen($html) > 0)
	{
		return parse_search($html);
	}
}

function parse_search($html)
{
	$start_flag = 0;
	$result='';
	libxml_use_internal_errors(true);
	$dom = new DOMDocument;
	$dom->loadHTML($html);

	$list2 = $dom->getElementsByTagName('a');
	$result_link = '';
	foreach($list2 as $key=>$value)
	{
		$line = trim($value->getAttribute('href'));
		//echo "key: [$key] => value: [$line]\n";
		$result_link = $line;
		if(substr($result_link,0,9)=='/lite/?q='){ continue; } // this skips over the "did you mean?" section if it exists
		if(substr($result_link,0,22)=='https://duckduckgo.com'){ $result_link=''; } // this skips over sponsored results that don't give us a proper link
		break; // only loop once
	}

	$list = $dom->getElementsByTagName('td');

	foreach($list as $key=>$value)
	{
		$line = trim($value->nodeValue);
		//echo "key: [$key] => value: [$line]\n";

		$class = trim($value->getAttribute('class'));
		//echo "key: [$key] => class: [$class]\n";

		if($class == 'result-snippet')
		{
			$result = $line;
			break;
		}
	}

	return $result."\n".$result_link."\n";
}
if($argv[3] != "")
{
	echo url_get_title($argv[3]);
	exit(1);
}
exit(0);
